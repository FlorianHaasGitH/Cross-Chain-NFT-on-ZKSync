{
  "version": "3.4",
  "log": [
    {
      "@chainlink/contracts-ccip/src/v0.8/ccip/interfaces/IAny2EVMMessageReceiver.sol:IAny2EVMMessageReceiver": {
        "src": "@chainlink\\contracts-ccip\\src\\v0.8\\ccip\\interfaces\\IAny2EVMMessageReceiver.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "ccipReceive((bytes32,uint64,bytes,bytes,struct Client.EVMTokenAmount[]))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@chainlink/contracts-ccip/src/v0.8/ccip/interfaces/IRouterClient.sol:IRouterClient": {
        "src": "@chainlink\\contracts-ccip\\src\\v0.8\\ccip\\interfaces\\IRouterClient.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isChainSupported(uint64)",
          "getFee(uint64,(bytes,bytes,struct Client.EVMTokenAmount[],address,bytes))",
          "ccipSend(uint64,(bytes,bytes,struct Client.EVMTokenAmount[],address,bytes))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@chainlink/contracts-ccip/src/v0.8/ccip/libraries/Client.sol:Client": {
        "src": "@chainlink\\contracts-ccip\\src\\v0.8\\ccip\\libraries\\Client.sol:5",
        "version": {
          "withMetadata": "8797002a37dce3d64d6a2fdc6d31f9a27a1146b88b200c34b6dbb9065bcedc1a",
          "withoutMetadata": "8797002a37dce3d64d6a2fdc6d31f9a27a1146b88b200c34b6dbb9065bcedc1a",
          "linkedWithoutMetadata": "8797002a37dce3d64d6a2fdc6d31f9a27a1146b88b200c34b6dbb9065bcedc1a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwner.sol:ConfirmedOwner": {
        "src": "@chainlink\\contracts-ccip\\src\\v0.8\\shared\\access\\ConfirmedOwner.sol:8",
        "version": {
          "withMetadata": "6e9361ae77dfd4859d74b5abbe3ef58ec52b533d8f2ac7f6d9bf02719da83455",
          "withoutMetadata": "6e9361ae77dfd4859d74b5abbe3ef58ec52b533d8f2ac7f6d9bf02719da83455",
          "linkedWithoutMetadata": "6e9361ae77dfd4859d74b5abbe3ef58ec52b533d8f2ac7f6d9bf02719da83455"
        },
        "inherit": [
          "@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol:ConfirmedOwnerWithProposal",
          "@chainlink/contracts-ccip/src/v0.8/shared/interfaces/IOwnable.sol:IOwnable"
        ],
        "libraries": [],
        "methods": [
          "(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ConfirmedOwner",
            "src": "@chainlink\\contracts-ccip\\src\\v0.8\\shared\\access\\ConfirmedOwner.sol:9"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol:ConfirmedOwnerWithProposal": {
        "src": "@chainlink\\contracts-ccip\\src\\v0.8\\shared\\access\\ConfirmedOwnerWithProposal.sol:8",
        "version": {
          "withMetadata": "f29b641b02a75a464ad1abbd2013a6cbfc0b8c18efd56a852c6b26d930242698",
          "withoutMetadata": "f29b641b02a75a464ad1abbd2013a6cbfc0b8c18efd56a852c6b26d930242698",
          "linkedWithoutMetadata": "f29b641b02a75a464ad1abbd2013a6cbfc0b8c18efd56a852c6b26d930242698"
        },
        "inherit": [
          "@chainlink/contracts-ccip/src/v0.8/shared/interfaces/IOwnable.sol:IOwnable"
        ],
        "libraries": [],
        "methods": [
          "(address,address)",
          "transferOwnership(address)",
          "acceptOwnership()",
          "owner()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ConfirmedOwnerWithProposal",
            "src": "@chainlink\\contracts-ccip\\src\\v0.8\\shared\\access\\ConfirmedOwnerWithProposal.sol:15"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ConfirmedOwnerWithProposal",
              "label": "s_owner",
              "type": "t_address",
              "src": "@chainlink\\contracts-ccip\\src\\v0.8\\shared\\access\\ConfirmedOwnerWithProposal.sol:9"
            },
            {
              "contract": "ConfirmedOwnerWithProposal",
              "label": "s_pendingOwner",
              "type": "t_address",
              "src": "@chainlink\\contracts-ccip\\src\\v0.8\\shared\\access\\ConfirmedOwnerWithProposal.sol:10"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@chainlink/contracts-ccip/src/v0.8/shared/access/OwnerIsCreator.sol:OwnerIsCreator": {
        "src": "@chainlink\\contracts-ccip\\src\\v0.8\\shared\\access\\OwnerIsCreator.sol:8",
        "version": {
          "withMetadata": "cc8de504185dda82b41f1d0f72ad4dd840e1ae5324b9278f86742f9424e65553",
          "withoutMetadata": "cc8de504185dda82b41f1d0f72ad4dd840e1ae5324b9278f86742f9424e65553",
          "linkedWithoutMetadata": "cc8de504185dda82b41f1d0f72ad4dd840e1ae5324b9278f86742f9424e65553"
        },
        "inherit": [
          "@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwner.sol:ConfirmedOwner",
          "@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol:ConfirmedOwnerWithProposal",
          "@chainlink/contracts-ccip/src/v0.8/shared/interfaces/IOwnable.sol:IOwnable"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "OwnerIsCreator",
            "src": "@chainlink\\contracts-ccip\\src\\v0.8\\shared\\access\\OwnerIsCreator.sol:9"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@chainlink/contracts-ccip/src/v0.8/shared/interfaces/IOwnable.sol:IOwnable": {
        "src": "@chainlink\\contracts-ccip\\src\\v0.8\\shared\\interfaces\\IOwnable.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "owner()",
          "transferOwnership(address)",
          "acceptOwnership()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@chainlink/contracts/src/v0.8/shared/interfaces/LinkTokenInterface.sol:LinkTokenInterface": {
        "src": "@chainlink\\contracts\\src\\v0.8\\shared\\interfaces\\LinkTokenInterface.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "approve(address,uint256)",
          "balanceOf(address)",
          "decimals()",
          "decreaseApproval(address,uint256)",
          "increaseApproval(address,uint256)",
          "name()",
          "symbol()",
          "totalSupply()",
          "transfer(address,uint256)",
          "transferAndCall(address,uint256,bytes)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/IERC1363.sol:IERC1363": {
        "src": "@openzeppelin\\contracts\\interfaces\\IERC1363.sol:16",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "transferAndCall(address,uint256)",
          "transferAndCall(address,uint256,bytes)",
          "transferFromAndCall(address,address,uint256)",
          "transferFromAndCall(address,address,uint256,bytes)",
          "approveAndCall(address,uint256)",
          "approveAndCall(address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/IERC4906.sol:IERC4906": {
        "src": "@openzeppelin\\contracts\\interfaces\\IERC4906.sol:10",
        "inherit": [
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC1155Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:113",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC721Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:55",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\utils\\SafeERC20.sol:18",
        "version": {
          "withMetadata": "12cfb53c8750677d79c249e4834ec6779f00d4f089c191978909a452246837d3",
          "withoutMetadata": "12cfb53c8750677d79c249e4834ec6779f00d4f089c191978909a452246837d3",
          "linkedWithoutMetadata": "12cfb53c8750677d79c249e4834ec6779f00d4f089c191978909a452246837d3"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:19",
        "inherit": [
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC721Errors",
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata",
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC721",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:23"
            },
            {
              "contract": "ERC721",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:26"
            },
            {
              "contract": "ERC721",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:28"
            },
            {
              "contract": "ERC721",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "contract": "ERC721",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:32"
            },
            {
              "contract": "ERC721",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:34"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\IERC721.sol:11",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:IERC721Receiver": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol:ERC721Burnable": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721Burnable.sol:13",
        "inherit": [
          "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC721Errors",
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata",
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "burn(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:14",
        "inherit": [
          "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC721Errors",
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata",
          "@openzeppelin/contracts/interfaces/IERC4906.sol:IERC4906",
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC721URIStorage",
              "label": "_tokenURIs",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:22"
            }
          ],
          "types": {
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\IERC721Metadata.sol:12",
        "inherit": [
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol:ERC721Utils": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\utils\\ERC721Utils.sol:16",
        "version": {
          "withMetadata": "d4f0bba299db65f39aad31c21ef5b3a8146de3fdb8ad0f1fc19e2eb124ddd387",
          "withoutMetadata": "d4f0bba299db65f39aad31c21ef5b3a8146de3fdb8ad0f1fc19e2eb124ddd387",
          "linkedWithoutMetadata": "d4f0bba299db65f39aad31c21ef5b3a8146de3fdb8ad0f1fc19e2eb124ddd387"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Base64.sol:Base64": {
        "src": "@openzeppelin\\contracts\\utils\\Base64.sol:9",
        "version": {
          "withMetadata": "9c6478eabb70f5e2de37073f499acf5e788853001a6ef4b4b3d25d1b8e5dc227",
          "withoutMetadata": "9c6478eabb70f5e2de37073f499acf5e788853001a6ef4b4b3d25d1b8e5dc227",
          "linkedWithoutMetadata": "9c6478eabb70f5e2de37073f499acf5e788853001a6ef4b4b3d25d1b8e5dc227"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Panic.sol:Panic": {
        "src": "@openzeppelin\\contracts\\utils\\Panic.sol:26",
        "version": {
          "withMetadata": "1e00292cce8e15f0cf034dc2c9bbd3b92d347f839c830d4d1e8fa5da039059e3",
          "withoutMetadata": "1e00292cce8e15f0cf034dc2c9bbd3b92d347f839c830d4d1e8fa5da039059e3",
          "linkedWithoutMetadata": "1e00292cce8e15f0cf034dc2c9bbd3b92d347f839c830d4d1e8fa5da039059e3"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:25",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:47"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuard",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:40"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Strings.sol:Strings": {
        "src": "@openzeppelin\\contracts\\utils\\Strings.sol:13",
        "version": {
          "withMetadata": "200221b8d5b71775a8fce627eb5ae4f3e7dcf7a5bfde303120b1d460e5b5dc75",
          "withoutMetadata": "200221b8d5b71775a8fce627eb5ae4f3e7dcf7a5bfde303120b1d460e5b5dc75",
          "linkedWithoutMetadata": "200221b8d5b71775a8fce627eb5ae4f3e7dcf7a5bfde303120b1d460e5b5dc75"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\ERC165.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/math/Math.sol:Math": {
        "src": "@openzeppelin\\contracts\\utils\\math\\Math.sol:12",
        "version": {
          "withMetadata": "786ec9e51567bf884e8d7a5fddef13da0f2e88e9e6b63d50e4e1639d678a628a",
          "withoutMetadata": "786ec9e51567bf884e8d7a5fddef13da0f2e88e9e6b63d50e4e1639d678a628a",
          "linkedWithoutMetadata": "786ec9e51567bf884e8d7a5fddef13da0f2e88e9e6b63d50e4e1639d678a628a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/math/SafeCast.sol:SafeCast": {
        "src": "@openzeppelin\\contracts\\utils\\math\\SafeCast.sol:19",
        "version": {
          "withMetadata": "565084b69c95f2c444d20ce552d6ed363169ed0d01729b68073fc42070512127",
          "withoutMetadata": "565084b69c95f2c444d20ce552d6ed363169ed0d01729b68073fc42070512127",
          "linkedWithoutMetadata": "565084b69c95f2c444d20ce552d6ed363169ed0d01729b68073fc42070512127"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/math/SignedMath.sol:SignedMath": {
        "src": "@openzeppelin\\contracts\\utils\\math\\SignedMath.sol:11",
        "version": {
          "withMetadata": "35946fadd923b0f3edb685e6c30e310a5ba9b826d73be783f3c068c12336ea33",
          "withoutMetadata": "35946fadd923b0f3edb685e6c30e310a5ba9b826d73be783f3c068c12336ea33",
          "linkedWithoutMetadata": "35946fadd923b0f3edb685e6c30e310a5ba9b826d73be783f3c068c12336ea33"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/XNFT.sol:XNFT": {
        "src": "contracts\\XNFT.sol:18",
        "version": {
          "withMetadata": "6c14a569ab4cec00e3696f35f83a70a2cba5d170674d01ed7ad1fbc30b19d980",
          "withoutMetadata": "6c14a569ab4cec00e3696f35f83a70a2cba5d170674d01ed7ad1fbc30b19d980",
          "linkedWithoutMetadata": "6c14a569ab4cec00e3696f35f83a70a2cba5d170674d01ed7ad1fbc30b19d980"
        },
        "inherit": [
          "@chainlink/contracts-ccip/src/v0.8/shared/access/OwnerIsCreator.sol:OwnerIsCreator",
          "@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwner.sol:ConfirmedOwner",
          "@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol:ConfirmedOwnerWithProposal",
          "@chainlink/contracts-ccip/src/v0.8/shared/interfaces/IOwnable.sol:IOwnable",
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
          "@chainlink/contracts-ccip/src/v0.8/ccip/interfaces/IAny2EVMMessageReceiver.sol:IAny2EVMMessageReceiver",
          "@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol:ERC721Burnable",
          "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
          "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC721Errors",
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata",
          "@openzeppelin/contracts/interfaces/IERC4906.sol:IERC4906",
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(address,address,uint64)",
          "mint()",
          "enableChain(uint64,address,bytes)",
          "disableChain(uint64)",
          "crossChainTransferFrom(address,address,uint256,uint64,uint8)",
          "ccipReceive((bytes32,uint64,bytes,bytes,struct Client.EVMTokenAmount[]))",
          "withdraw(address)",
          "withdrawToken(address,address)",
          "tokenURI(uint256)",
          "getCCIPRouter()",
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "XNFT",
            "src": "contracts\\XNFT.sol:101"
          },
          {
            "kind": "state-variable-assignment",
            "name": "characters",
            "src": "contracts\\XNFT.sol:42"
          },
          {
            "kind": "state-variable-immutable",
            "name": "i_ccipRouter",
            "src": "contracts\\XNFT.sol:49"
          },
          {
            "kind": "state-variable-immutable",
            "name": "i_linkToken",
            "src": "contracts\\XNFT.sol:50"
          },
          {
            "kind": "state-variable-immutable",
            "name": "i_currentChainSelector",
            "src": "contracts\\XNFT.sol:51"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "XNFT",
              "label": "characters",
              "type": "t_array(t_string_storage)dyn_storage",
              "src": "contracts\\XNFT.sol:42"
            },
            {
              "contract": "XNFT",
              "label": "_nextTokenId",
              "type": "t_uint256",
              "src": "contracts\\XNFT.sol:53"
            },
            {
              "contract": "XNFT",
              "label": "s_chains",
              "type": "t_mapping(t_uint64,t_struct(XNftDetails)7621_storage)",
              "src": "contracts\\XNFT.sol:55"
            }
          ],
          "types": {
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint64,t_struct(XNftDetails)7621_storage)": {
              "label": "mapping(uint64 => struct XNFT.XNftDetails)"
            },
            "t_uint64": {
              "label": "uint64"
            },
            "t_struct(XNftDetails)7621_storage": {
              "label": "struct XNFT.XNftDetails",
              "members": [
                {
                  "label": "xNftAddress",
                  "type": "t_address"
                },
                {
                  "label": "ccipExtraArgsBytes",
                  "type": "t_bytes_storage"
                }
              ]
            },
            "t_address": {
              "label": "address"
            },
            "t_bytes_storage": {
              "label": "bytes"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    }
  ]
}